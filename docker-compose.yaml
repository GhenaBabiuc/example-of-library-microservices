version: '3.8'

services:
  users-db:
    image: postgres:15
    container_name: users-db-container
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5431:5432"
    volumes:
      - ./users_data:/var/lib/postgresql/data
    networks:
      - library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d users_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  books-db:
    image: postgres:15
    container_name: books-db-container
    environment:
      POSTGRES_DB: books_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./books_data:/var/lib/postgresql/data
    networks:
      - library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d books_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  borrowing-db:
    image: postgres:15
    container_name: borrowing-db-container
    environment:
      POSTGRES_DB: borrowing_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - ./borrowing_data:/var/lib/postgresql/data
    networks:
      - library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d borrowing_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    build:
      context: ./EurekaServer
      dockerfile: Dockerfile
    container_name: eureka-server-container
    ports:
      - "8761:8761"
    networks:
      - library-network

  users-service:
    build:
      context: ./UsersService
      dockerfile: Dockerfile
    container_name: users-service-container
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://users-db:5432/users_db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      users-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - library-network
    restart: unless-stopped

  books-service:
    build:
      context: ./BooksService
      dockerfile: Dockerfile
    container_name: books-service-container
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://books-db:5432/books_db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      books-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - library-network
    restart: unless-stopped

  borrowing-service:
    build:
      context: ./BorrowingService
      dockerfile: Dockerfile
    container_name: borrowing-service-container
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://borrowing-db:5432/borrowing_db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      borrowing-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
      users-service:
        condition: service_started
      books-service:
        condition: service_started
    networks:
      - library-network
    restart: unless-stopped

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway-container
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      eureka-server:
        condition: service_started
      users-service:
        condition: service_started
      books-service:
        condition: service_started
      borrowing-service:
        condition: service_started
    networks:
      - library-network
    restart: unless-stopped

volumes:
  users_data:
  books_data:
  borrowing_data:

networks:
  library-network:
    driver: bridge
